import greenfoot.*;  // (World, Actor, GreenfootImage, Greenfoot and MouseInfo)

/**
 * Write a description of class Testing here.
 * 
 * @author (your name) 
 * @version (a version number or a date)
 */
public class Testing extends World
{
    private CollisionEngine ce;
    public int level = 2;

    GreenfootSound music = new GreenfootSound("Loopdeloop Galaxy - Super Mario Galaxy.mp3");
    int pop;
    Hero hero;
    Timer timer;
    /**
     * Constructor for objects of class Testing.
     * 
     */
    public Testing(int pop)
    {    
        super(1000, 800, 1, false);
        this.setBackground("bg.png");

        Hero h = (Hero)hero;
        timer = new Timer();
        this.pop = pop;
        int[][] map = {

               {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
        {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
        {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
        {-1,-1,-1,-1,-1,-1,-1,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
        {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,56,-1,-1},
        {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,56,56,56,56,-1,-1,-1,-1,-1,-1},
        {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
        {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,56,-1,-1,-1,-1,-1,-1,-1,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,56,56,56,-1,-1,-1,-1,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
        {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,56,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
        {-1,-1,-1,-1,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
        {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
        {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,23,-1,182,-1,-1,-1,183,85,84,85,-1,188},
        {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,188,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,183,-1,84,221,-1,-1,-1,188,-1,23,-1,-1,-1,-1,23,-1,-1,188,-1,-1,183,-1,127,127,127,-1,-1,-1,127,127,127,-1,-1,127},
        {-1,-1,-1,-1,-1,-1,-1,-1,-1,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,56,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,127,127,127,-1,-1,-1,-1,-1,-1,188,-1,-1,-1,-1,127,127,127,127,127,127,127,127,127,127,127,-1,-1,-1,-1,127,127,127,127,127,127,127,127,110,110,110,127,127,127,110,110,110,-1,-1,110},
        {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,85,-1,182,-1,-1,-1,-1,-1,-1,-1,127,127,127,127,127,127,127,127,110,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,127,110,110,110,110,110,110,110,110,110,34,34,110,110,110,110,110,110,-1,-1,34},
        {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,84,84,127,127,127,-1,-1,-1,-1,-1,127,127,110,110,110,-1,-1,-1,-1,-1,276,-1,-1,-1,-1,-1,-1,183,-1,-1,-1,182,-1,110,110,110,110,110,34,110,110,34,34,34,34,34,34,34,34,34,34,34,-1,-1,-1},
        {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,183,127,127,110,110,110,127,22,22,22,127,110,110,34,110,110,-1,-1,-1,-1,-1,-1,-1,-1,110,110,110,110,110,110,110,110,110,110,110,110,110,34,34,34,34,34,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
        {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,188,-1,-1,127,127,110,110,110,110,110,110,57,57,57,110,110,110,34,110,110,110,-1,188,-1,85,85,-1,110,110,110,110,110,110,34,34,34,110,110,110,34,34,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
        {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,183,-1,221,-1,127,127,110,110,110,110,110,110,110,34,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,34,34,34,34,34,34,34,34,34,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
        {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,188,188,-1,-1,127,127,127,127,110,110,110,110,110,110,110,110,34,34,34,34,34,34,34,34,34,34,110,110,110,110,110,110,110,110,110,110,110,34,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,56,-1,-1,-1,-1,-1,-1,-1,-1,-1},
        {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,127,127,127,127,127,127,127,110,110,110,110,110,34,110,110,110,34,34,34,34,-1,-1,-1,-1,-1,-1,-1,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
        {-1,-1,-1,56,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,34,110,110,110,110,110,110,110,110,110,110,110,110,34,34,34,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,56,-1,-1},
        {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
        {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,56,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
        {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
        {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
        {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,188,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
        {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,188,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,127,127,127,127,127,127,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
        {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,56,-1,-1,-1,-1,-1,-1,-1,183,-1,-1,-1,127,127,127,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
        {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,127,127,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,56,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
        {-1,-1,56,-1,-1,-1,-1,-1,56,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,56,-1,-1,-1,-1,-1,-1,-1,-1,-1},
        {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,127,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,56,56,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
        {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,56,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
        {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,56,56,-1,-1},
        {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,127,127,127,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,188,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
        {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,127,127,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
        {-1,183,-1,-1,-1,188,221,84,85,-1,-1,-1,-1,85,-1,-1,-1,188,-1,-1,-1,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,127,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
        {127,127,127,127,127,127,127,127,127,-1,-1,-1,-1,127,127,127,127,127,127,127,127,127,-1,-1,188,-1,-1,183,84,84,-1,188,-1,84,-1,-1,-1,183,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,188,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,182,-1,188,-1,-1,-1},
        {110,110,110,110,110,110,110,110,110,177,177,177,177,110,110,110,110,110,110,110,110,110,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,230,230,-1,-1,-1,-1,-1,182,-1,-1,188,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,127,127,127,127,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,127,127,127,-1,-1,-1},
        {110,110,110,110,110,110,110,110,110,110,175,175,175,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,230,230,-1,-1,-1,-1,-1,230,127,127,127,127,127,23,-1,-1,183,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,188,-1,85,-1,-1,-1,-1,221,-1,23,23,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
        {110,110,110,110,110,110,110,110,110,110,175,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,230,230,-1,-1,-1,-1,-1,230,230,110,110,110,110,110,127,127,127,127,-1,-1,-1,-1,-1,-1,221,-1,188,-1,84,84,-1,182,-1,-1,-1,-1,127,127,127,127,-1,-1,-1,127,127,127,127,127,127,127,-1,188,-1,-1,-1,23,-1,182,-1,188,-1,-1},
        {110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,230,230,230,230,230,-1,-1,-1,-1,230,230,110,110,110,110,110,110,110,110,110,110,127,-1,-1,-1,-1,127,127,127,127,127,127,127,127,127,127,-1,-1,127,110,110,110,110,-1,-1,-1,110,110,110,110,110,110,110,127,127,127,127,127,127,127,127,127,127,127,127},
        {230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,110,255,255,255,255,255,110,255,255,110,110,110,110,230,230,230,230,230,230,230,230,230,-1,-1,-1,-1,-1,-1,230,230,230,230,110,110,110,110,110,110,110,110,110,127,-1,-1,-1,-1,110,110,110,110,110,110,110,-1,-1,-1,-1,110,110,110,110,110,-1,-1,-1,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110},
        {230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,-1,-1,-1,-1,-1,255,255,110,230,230,230,230,230,230,230,230,-1,-1,-1,-1,-1,-1,-1,-1,230,230,230,230,230,230,230,230,230,110,110,110,110,110,110,110,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,110,110,110,110,110,-1,-1,-1,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110},
        {230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,276,-1,-1,-1,-1,182,-1,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,110,110,110,-1,-1,-1,188,-1,85,85,-1,183,-1,-1,110,110,110,110,110,110,110,-1,-1,-1,110,110,230,230,230,199,199,199,230,230,230,230,110,110,230,230,230,230,230},
        {230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,230,230,230,-1,-1,-1,110,230,230,230,230,230,230,230,230,230,230,230,230,230,230,34,230,230,230},
        {34,34,34,34,34,34,34,34,34,230,230,230,230,230,230,230,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,276,-1,-1,-1,-1,-1,-1,-1,-1,230,230,230,230,230,230,230,230,230,230,230,34,34,34,34,34,34,34,230,230,230,230,230,230,230,110,110,110,110,110,110,110,110,230,230,230,230,230,230,230,230,-1,-1,-1,230,230,230,230,230,34,34,34,230,230,34,34,34,34,34,34,34,34,34},
        {34,34,34,34,34,34,34,34,34,34,230,230,230,230,230,230,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,85,-1,189,230,230,230,230,230,230,230,230,230,34,34,34,34,34,34,34,34,34,34,34,34,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,34,34,34,34,34,-1,-1,-1,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34},
        {34,34,34,34,34,34,34,34,34,34,34,34,230,230,230,230,-1,-1,-1,230,-1,-1,-1,230,230,-1,189,-1,-1,-1,182,-1,-1,230,230,230,230,230,230,230,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,177,177,177,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34},
        {34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,230,230,230,230,230,174,174,174,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,175,175,175,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34},


            };

        // Declareren en initialiseren van de TileEngine klasse om de map aan de world toe te voegen
        TileEngine te = new TileEngine(this, 60, 60, map);
        te = new TileEngine(this, 60, 60);
        te.setTileFactory(new Lvl2TileFactory());
        te.setMap(map);
        // Declarenre en initialiseren van de camera klasse met de TileEngine klasse    
        // zodat de camera weet welke tiles allemaal moeten meebewegen met de camera
        Camera camera = new Camera(te);
        // Declareren en initialiseren van een main karakter van het spel mijne heet Hero. Deze klasse 
        // moet de klasse Mover extenden voor de camera om te werken
        Hero hero = new Hero(2, pop);

        // Laat de camera een object volgen. Die moet een Mover instatie zijn of een extentie hiervan.
        camera.follow(hero);

        showText("Punten: " + h.punten, 500, 20);
        // Alle objecten toevoegen aan de wereld: camera, main karakter en mogelijke enemies
        addObject(camera, 255, 2100);
        addObject(hero, 255, 2100);
        //addObject(new Enemy(), 1530, 770);

        // Initialiseren van de CollisionEngine zodat de speler niet door de tile heen kan lopen.
        // De collision engine kijkt alleen naar de tiles die de variabele solid op true hebben staan.
        ce = new CollisionEngine(te, camera);
        // Toevoegen van de mover instantie of een extentie hiervan
        ce.addCollidingMover(hero);
        prepare();
    }

    @Override
    public void act() {
        ce.update();
        showText("Tijd: "+timer.Timelvl2(), 500, 50);
         if(timer.Timelvl2() <= 1)
        {
            Greenfoot.setWorld(new GameOver(1, pop));
            stopped();
        }
        
        if(!music.isPlaying())
        {
            music.play();
        }
    }

    public void stopped()
    {
        music.stop();
        
    }
    
    /**
     * Prepare the world for the start of the program.
     * That is: create the initial objects and add them to the world.
     */
    private void prepare()
    {
        Cross cross = new Cross(pop,2);
        addObject(cross,964,33);

        EnemySnake enemySnake = new EnemySnake();
        addObject(enemySnake,1528,2265);
        EnemySnake enemySnake2 = new EnemySnake();
        addObject(enemySnake2,1703,2923);
        EnemyJump enemyJump = new EnemyJump();
        addObject(enemyJump,1700,1645);
        EnemyJump enemyJump2 = new EnemyJump();
        addObject(enemyJump2,2053,4101);
        Deur_Mid deur_Mid = new Deur_Mid(pop, 2);
        addObject(deur_Mid,5950,2425);
        Deur_Top deur_Top = new Deur_Top();
        addObject(deur_Top,5950,2380);
        K k = new K(2);
        addObject(k,281,2000);
        A a = new A(2);
        addObject(a,4340,1570);

        S s = new S(2);
        addObject(s,3960,2640);
        A2 a2 = new A2(2);
        addObject(a2,3740, 1020);
        EnemyJump enemyJump3 = new EnemyJump();
        addObject(enemyJump3,4100,2065);
        k.setLocation(357,2004);
        k.setLocation(1065,2840);
        Munt munt = new Munt();
        addObject(munt,1290,2730);
        Munt munt2 = new Munt();
        addObject(munt2,1710,2730);
        Munt munt3 = new Munt();
        addObject(munt3,1540,2900);
        Munt munt4 = new Munt();
        addObject(munt4,1945,2850);
        Munt munt5 = new Munt();
        addObject(munt5,595,2030);
        Munt munt6 = new Munt();
        addObject(munt6,665,2030);
        Munt munt7 = new Munt();
        addObject(munt7,725,2030);
        Munt munt8 = new Munt();
        addObject(munt8,540,2090);
        Munt munt9 = new Munt();
        addObject(munt9,775,2090);
        Munt munt10 = new Munt();
        addObject(munt10,1110,2000);
        Munt munt11 = new Munt();
        addObject(munt11,1170,1830);
        Munt munt12 = new Munt();
        addObject(munt12,1700,1570);
        Munt munt13 = new Munt();
        addObject(munt13,1700,1510);
        Munt munt14 = new Munt();
        addObject(munt14,1700,1450);
        Munt munt15 = new Munt();
        addObject(munt15,1700,1390);
        Munt munt16 = new Munt();
        addObject(munt16,1700,1330);
        Munt munt17 = new Munt();
        addObject(munt17,1700,1270);
        Munt munt18 = new Munt();
        addObject(munt18,1700,1210);
        Munt munt19 = new Munt();
        addObject(munt19,1700,1150);
        Munt munt20 = new Munt();
        addObject(munt20,2426,915);
        Munt munt21 = new Munt();
        addObject(munt21,2359,945);
        Munt munt22 = new Munt();
        addObject(munt22,2487,886);
        Munt munt23 = new Munt();
        addObject(munt23,2559,855);
        Munt munt24 = new Munt();
        addObject(munt24,2629,824);
        Munt munt25 = new Munt();
        addObject(munt25,2703,788);
        Munt munt26 = new Munt();
        addObject(munt26,2778,758);
        Munt munt27 = new Munt();
        addObject(munt27,3100,725);
        Munt munt28 = new Munt();
        addObject(munt28,3150,725);
        Munt munt29 = new Munt();
        addObject(munt29,3200,725);
        Munt munt30 = new Munt();
        addObject(munt30,3854,640);
        Munt munt31 = new Munt();
        addObject(munt31,3793,640);
        Munt munt32 = new Munt();
        addObject(munt32,3727,640);
        Munt munt33 = new Munt();
        addObject(munt33,3656,640);
        Munt munt34 = new Munt();
        addObject(munt34,3577,640);
        Munt munt35 = new Munt();
        addObject(munt35,4060,922);
        Munt munt36 = new Munt();
        addObject(munt36,4150,922);
        Munt munt37 = new Munt();
        addObject(munt37,4240,922);
        Munt munt38 = new Munt();
        addObject(munt38,4330,922);
        Munt munt39 = new Munt();
        addObject(munt39,4420,922);
        Munt munt40 = new Munt();
        addObject(munt40,4510,922);
        Munt munt41 = new Munt();
        addObject(munt41,4600,922);
        Munt munt42 = new Munt();
        addObject(munt42,4560,630);
        Munt munt43 = new Munt();
        addObject(munt43,4760,630);
        Munt munt44 = new Munt();
        addObject(munt44,4660,580);
        Enemy enemy = new Enemy();
        addObject(enemy,5550,707);
        EnemySnake enemySnake3 = new EnemySnake();
        addObject(enemySnake3,5500,2445);
        Munt munt45 = new Munt();
        addObject(munt45,2563,2126);
        Munt munt46 = new Munt();
        addObject(munt46,2642,2124);
        Munt munt47 = new Munt();
        addObject(munt47,2712,2129);
        Munt munt48 = new Munt();
        addObject(munt48,2787,2173);
        Munt munt49 = new Munt();
        addObject(munt49,2969,2111);
        Munt munt50 = new Munt();
        addObject(munt50,3456,2248);
        Munt munt51 = new Munt();
        addObject(munt51,3534,2245);
        Munt munt52 = new Munt();
        addObject(munt52,3607,2245);
        Munt munt53 = new Munt();
        addObject(munt53,4047,2230);
        Munt munt54 = new Munt();
        addObject(munt54,3985,2230);
        Munt munt55 = new Munt();
        addObject(munt55,3922,2230);
        Munt munt56 = new Munt();
        addObject(munt56,3867,2230);
        Munt munt57 = new Munt();
        addObject(munt57,3923,2430);
        Munt munt58 = new Munt();
        addObject(munt58,3989,2430);
        Munt munt59 = new Munt();
        addObject(munt59,4281,2300);
        Munt munt60 = new Munt();
        addObject(munt60,4338,2300);
        Munt munt61 = new Munt();
        addObject(munt61,4707,2240);
        Munt munt62 = new Munt();
        addObject(munt62,4766,2240);
        Munt munt63 = new Munt();
        addObject(munt63,4825,2240);
        Munt munt64 = new Munt();
        addObject(munt64,4763,2185);
        Munt munt65 = new Munt();
        addObject(munt65,4182,1560);
        Munt munt66 = new Munt();
        addObject(munt66,4455,1560);
        Munt munt67 = new Munt();
        addObject(munt67,4252,1560);
        Munt munt68 = new Munt();
        addObject(munt68,4353,1499);
        a.setLocation(4378,1560);
    }
}

